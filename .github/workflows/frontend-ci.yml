name: CI/CD Pipeline

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main ]

jobs:
  # --- 共通: Lint / Typecheck / Unit test ---
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Unit tests (Vitest)
        run: npm run test:coverage --if-present

  # --- Preview (staging branch用) ---
  preview-e2e:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: ci
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Add Vercel CLI
        run: npm i -D vercel

      - name: Deploy to Vercel (Preview: staging branch)
        id: vercel
        run: |
          URL=$(npx vercel deploy --yes --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"})
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run E2E Tests against Preview
        env:
          BASE_URL: https://preview.rbplus-rank-manager.site
        run: npx playwright test tests/e2e/

  # --- Production (main branch用) ---
  prod-deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: ci
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Add Vercel CLI
        run: npm i -D vercel

      - name: Deploy to Vercel (Production = main branch)
        run: |
          npx vercel deploy --prod --yes --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run Smoke Test against Production
        env:
          BASE_URL: https://rbplus-rank-manager.site
        run: npx playwright test tests/e2e/smoke.spec.ts
