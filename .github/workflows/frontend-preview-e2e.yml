name: Frontend Preview & E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
      - "**"
      - ".github/workflows/frontend-preview-e2e.yml"

jobs:
  preview-and-e2e:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: read
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }} # ← なくても動くがデバッグ用に推奨

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build (prebuilt 用)
        run: npm run build

      # --- ここがキモ：CLI が参照する project.json を「今の作業ディレクトリ」に生成 ---
      - name: Write .vercel/project.json
        run: |
          mkdir -p .vercel
          echo "{\"projectId\":\"$VERCEL_PROJECT_ID\",\"orgId\":\"$VERCEL_ORG_ID\"}" > .vercel/project.json
          echo "===== .vercel/project.json ====="
          cat .vercel/project.json
          echo "================================"

      # トークンでその org に見えているプロジェクト一覧を出して確認（任意）
      - name: Debug list vercel projects (optional)
        run: |
          npx vercel projects ls --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"} || true

      - name: Add Vercel CLI
        run: npm i -D vercel

      - name: Deploy to Vercel (Preview)
        id: vercel
        run: |

          # project.json を使って prebuilt デプロイ
          URL=$(npx vercel deploy --prebuilt --yes --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"})
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Preview URL: $URL"

      - name: Wait for preview to be ready
        run: |
          for i in {1..10}; do
            if curl -sSfL "${{ steps.vercel.outputs.url }}" > /dev/null; then
              echo "Preview is ready."
              exit 0
            fi
            echo "Waiting preview... ($i/10)"
            sleep 3
          done
          echo "Preview did not become ready in time." >&2
          exit 1

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run E2E on Preview
        env:
          BASE_URL: ${{ steps.vercel.outputs.url }}
        run: npm run e2e --if-present
