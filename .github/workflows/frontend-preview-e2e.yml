name: Frontend Preview & E2E & Production Deploy

on:
  push:
    branches: [ main ]

jobs:
  preview-and-test:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: read
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}
      VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}

    outputs:
      preview_url: ${{ steps.vercel.outputs.url }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Write .vercel/project.json
        run: |
          mkdir -p .vercel
          echo "{\"projectId\":\"$VERCEL_PROJECT_ID\",\"orgId\":\"$VERCEL_ORG_ID\"}" > .vercel/project.json

      - name: Add Vercel CLI
        run: npm i -D vercel

      - name: Deploy to Vercel (Preview)
        id: vercel
        run: |
          URL=$(npx vercel deploy --yes --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"})
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Wait for preview to be ready
        run: |
          for i in {1..20}; do
            if curl -sS -H "x-vercel-protection-bypass: $VERCEL_BYPASS_TOKEN" "${{ steps.vercel.outputs.url }}" > /dev/null; then
              echo "Preview is ready."
              exit 0
            fi
            echo "Waiting preview... ($i/20)"
            sleep 3
          done
          echo "Preview did not become ready in time." >&2
          exit 1

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run Smoke Test
        env:
          BASE_URL: ${{ steps.vercel.outputs.url }}
        run: npx playwright test tests/e2e/smoke.spec.ts

      - name: Run Full E2E Test
        env:
          BASE_URL: ${{ steps.vercel.outputs.url }}
        run: npx playwright test tests/e2e/e2e-pages.spec.ts

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: preview-and-test
    if: success()
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Write .vercel/project.json
        run: |
          mkdir -p .vercel
          echo "{\"projectId\":\"$VERCEL_PROJECT_ID\",\"orgId\":\"$VERCEL_ORG_ID\"}" > .vercel/project.json

      - name: Add Vercel CLI
        run: npm i -D vercel

      - name: Deploy to Production
        run: |
          npx vercel deploy --prod --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}
