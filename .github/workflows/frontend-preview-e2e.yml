name: Frontend Preview & E2E & Production Deploy

on:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview-and-test:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: read
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}
      VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}

    outputs:
      preview_url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Add Vercel CLI
        run: npm i -D vercel

      # üîë „Åì„Åì„ÅßË®≠ÂÆö„ÇíÂèñÂæó„Åô„Çã
      - name: Vercel pull (preview)
        run: npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}

      - name: Vercel build (local)
        run: npx vercel build --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}

      - name: Deploy to Vercel (Preview, prebuilt)
        id: deploy
        run: |
          URL=$(npx vercel deploy --prebuilt --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"})
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Wait for preview to be ready
        run: |
          set -e
          URL="${{ steps.deploy.outputs.url }}"
          for i in {1..40}; do
            code=$(curl -sS -o /dev/null -w "%{http_code}" \
              -H "x-vercel-protection-bypass: $VERCEL_BYPASS_TOKEN" \
              --location "$URL/robots.txt")
            if [ "$code" = "200" ]; then
              echo "Preview is ready: $URL"
              exit 0
            fi
            echo "Waiting preview... ($i/40, got $code)"
            sleep 3
          done
          echo "Preview did not become ready in time." >&2
          exit 1

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run Smoke Test
        env:
          BASE_URL: ${{ steps.deploy.outputs.url }}
          VERCEL_BYPASS_TOKEN: ${{ env.VERCEL_BYPASS_TOKEN }}
        run: npx playwright test tests/e2e/smoke.spec.ts

      - name: Run Full E2E Test
        env:
          BASE_URL: ${{ steps.deploy.outputs.url }}
          VERCEL_BYPASS_TOKEN: ${{ env.VERCEL_BYPASS_TOKEN }}
        run: npx playwright test tests/e2e/e2e-pages.spec.ts

      - if: always()
        name: Upload Playwright Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            playwright-report
            test-results

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: preview-and-test
    if: success()
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Add Vercel CLI
        run: npm i -D vercel

      # üîë Êú¨Áï™Áî®Ë®≠ÂÆö„ÇíÂèñÂæó
      - name: Vercel pull (production)
        run: npx vercel pull --yes --environment=production --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}

      - name: Vercel build (local)
        run: npx vercel build --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}

      - name: Deploy to Production (prebuilt)
        run: npx vercel deploy --prod --prebuilt --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}
