name: Preview CI/CD

on:
  push:
    branches: [ preview ]

# 並列走行で alias 競合しないよう古い実行をキャンセル
concurrency:
  group: preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Unit tests (Vitest)
        run: npm run test:coverage --if-present

  deploy-and-test:
    runs-on: ubuntu-latest
    needs: ci
    outputs:
      preview_url: ${{ steps.deploy.outputs.url }}
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}
      # ※ 一時URL( *.vercel.app )であれば通常は不要。カスタムの固定previewで保護している場合に使う
      VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Add Vercel CLI
        run: npm i -D vercel

      # Preview 環境の設定を取得
      - name: vercel pull (preview)
        run: npx vercel pull --yes --environment=preview --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}

      # 再現性のあるビルド
      - name: vercel build
        run: npx vercel build --token "$VERCEL_TOKEN"

      # 事前ビルドをデプロイ → 一時URLを出力
      - id: deploy
        name: vercel deploy (preview prebuilt)
        run: |
          url=$(npx vercel deploy --prebuilt --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"})
          echo "url=$url" >> "$GITHUB_OUTPUT"
          echo "Deployed to $url"

      - name: Install Playwright
        run: npx playwright install --with-deps

      # 一時URLの到達性チェック（保護が無ければヘッダは省略されてもOK）
      - name: Wait for /login to be reachable
        env:
          BASE_URL: ${{ steps.deploy.outputs.url }}
        run: |
          for i in {1..30}; do
            if [ -n "$VERCEL_BYPASS_TOKEN" ]; then
              code=$(curl -s -o /dev/null -w "%{http_code}" \
                -H "x-vercel-protection-bypass: $VERCEL_BYPASS_TOKEN" \
                "$BASE_URL/login")
            else
              code=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/login")
            fi
            if [ "$code" = "200" ] || [ "$code" = "404" ]; then
              echo "Reachable ($code)"; break
            fi
            echo "Not ready ($code). Retrying..."; sleep 5
          done

      - name: Run E2E (against ephemeral URL)
        env:
          BASE_URL: ${{ steps.deploy.outputs.url }}
          VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}
        run: npx playwright test tests/e2e/

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-preview
          path: playwright-report

  alias-on-success:
    runs-on: ubuntu-latest
    needs: deploy-and-test
    if: needs.deploy-and-test.result == 'success'
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_SLUG: ${{ secrets.VERCEL_ORG_SLUG }}
      DEPLOY_URL: ${{ needs.deploy-and-test.outputs.preview_url }}
      PREVIEW_DOMAIN: preview.rbplus-rank-manager.site
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Add Vercel CLI
        run: npm i -g vercel

      # 合格した一時URLを固定 preview ドメインへ alias（即時切替）
      - name: Alias to fixed preview domain
        run: vercel alias set "$DEPLOY_URL" "$PREVIEW_DOMAIN" --token "$VERCEL_TOKEN" ${VERCEL_ORG_SLUG:+--scope "$VERCEL_ORG_SLUG"}

  # （任意）固定ドメインでの最終スモーク
  preview-smoke:
    runs-on: ubuntu-latest
    needs: alias-on-success
    env:
      BASE_URL: https://preview.rbplus-rank-manager.site
      VERCEL_BYPASS_TOKEN: ${{ secrets.VERCEL_BYPASS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - run: npm ci
      - run: npx playwright install --with-deps
      - name: Run Smoke Test (fixed preview domain)
        run: npx playwright test tests/e2e/smoke.spec.ts
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-preview-fixed
          path: playwright-report
